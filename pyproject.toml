[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "robot-fleet-dashboard"
version = "2.0.0"
description = "A comprehensive monitoring dashboard for robot fleet management with real-time status updates, motor data visualization, and dynamic configuration"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Built in collaboration with Claude (Anthropic)"}
]
keywords = ["robotics", "dashboard", "monitoring", "fleet-management", "ros"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Monitoring",
]
requires-python = ">=3.8"
dependencies = [
    "bidict==0.23.1",
    "blinker==1.9.0",
    "certifi==2024.2.2",
    "charset-normalizer==3.3.2",
    "click==8.1.8",
    "DateTime==5.5",
    "dnspython==2.7.0",
    "eventlet==0.40.1",
    "Flask==3.1.1",
    "flask-cors==6.0.1",
    "Flask-SocketIO==5.5.1",
    "greenlet==3.2.3",
    "h11==0.16.0",
    "idna==3.7",
    "importlib_metadata==8.7.0",
    "itsdangerous==2.2.0",
    "Jinja2==3.1.6",
    "jsons==1.6.3",
    "MarkupSafe==3.0.2",
    "numpy==1.26.4",
    "opencv-python==4.9.0.80",
    "python-dotenv==1.1.1",
    "python-engineio==4.12.2",
    "python-socketio==5.13.0",
    "pytz==2025.2",
    "PyYAML==6.0.1",
    "requests==2.31.0",
    "simple-websocket==1.1.0",
    "typish==1.9.3",
    "urllib3==2.2.1",
    "Werkzeug==3.1.3",
    "wsproto==1.2.0",
    "zipp==3.23.0",
    "zope.interface==7.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "flake8>=6.0",
    "black>=23.0",
    "isort>=5.0",
    "bandit>=1.7",
    "safety>=2.0",
    "mypy>=1.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/robot-fleet-dashboard"
Repository = "https://github.com/yourusername/robot-fleet-dashboard"
Issues = "https://github.com/yourusername/robot-fleet-dashboard/issues"

[project.scripts]
robot-dashboard = "web:main"
add-robot = "add_robot:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*", "docs*", ".github*", "static*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | static
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_third_party = ["flask", "yaml", "requests", "numpy", "cv2"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    "static",
    ".venv"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]

[tool.bandit]
exclude_dirs = ["tests", "static", ".venv"]
skips = ["B101", "B601"]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "static/*",
    "setup.py",
    ".venv/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]